{
    "name": "duckduckgo-privacy-extension",
    "engines": {
        "node": ">=16.0.0",
        "npm": ">=7.0.0"
    },
    "license": "Apache-2.0",
    "repository": "duckduckgo/duckduckgo-privacy-extension",
    "scripts": {
        "install-ci": "npm ci --ignore-scripts && npm rebuild puppeteer && npm run postinstall",
        "postinstall": "git submodule update --init --recursive && npm run copy-modules && export PATH='$PATH:$PWD/node_modules/chromedriver/bin'",
        "copy-modules": "cp -r node_modules/@duckduckgo/content-scope-scripts shared/ && cp -r node_modules/tracker-surrogates shared/",
        "bundle-config": "node scripts/bundleConfig.mjs",
        "build": "echo 'Try npm run release-firefox or npm run release-chrome instead' && exit 0",
        "dev": "echo 'Try npm run dev-firefox or npm run dev-chrome instead' && exit 0",
        "release": "grunt build",
        "lint": "eslint '*.js' shared/js shared/data unit-test integration-test scripts",
        "lint-fix": "npm run lint -- --fix",
        "test": "grunt test --browser=chrome --type=dev",
        "test-debug": "grunt test --browser=chrome --type=dev --test-debug",
        "test-int": "make setup-artifacts-dir && make dev browser=chrome type=dev && jasmine --config=integration-test/config.json",
        "dev-firefox": "make dev browser=firefox type=dev watch=1",
        "open-dev-firefox": "web-ext run -s build/firefox/dev/ -u https://privacy-test-pages.glitch.me/",
        "release-firefox": "make browser=firefox type=release",
        "dev-chrome": "make dev browser=chrome type=dev watch=1",
        "dev-chrome-mv3": "make dev browser=chrome-mv3 type=dev watch=1",
        "beta-firefox": "make beta-firefox browser=firefox type=release",
        "release-chrome": "make browser=chrome type=release && make chrome-release-zip",
        "release-chrome-mv3": "make browser=chrome-mv3 type=release && make chrome-mv3-release-zip"
    },
    "devDependencies": {
        "@babel/cli": "^7.17.10",
        "@babel/core": "^7.17.12",
        "@babel/node": "^7.17.10",
        "@babel/polyfill": "^7.10.4",
        "@babel/preset-env": "^7.17.12",
        "@fingerprintjs/fingerprintjs": "^3.3.3",
        "asana": "github:Asana/node-asana",
        "babelify": "10.0.0",
        "brfs": "^2.0.2",
        "duckduckgo-colors": "0.0.1",
        "eslint": "^7.32.0",
        "eslint-config-standard": "^16.0.3",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-node": "^11.1.0",
        "glob": "^8.0.3",
        "grunt": "1.5.3",
        "grunt-browserify": "6.0.0",
        "grunt-contrib-concat": "2.1.0",
        "grunt-contrib-watch": "1.1.0",
        "grunt-exec": "3.0.0",
        "grunt-karma": "4.0.2",
        "grunt-sass": "3.1.0",
        "jasmine": "4.1.0",
        "jasmine-core": "3.5.0",
        "jsdom": "^19.0.0",
        "karma": "6.3.19",
        "karma-chrome-launcher": "3.1.1",
        "karma-jasmine": "1.1.1",
        "karma-source-map-support": "1.4.0",
        "load-grunt-tasks": "5.1.0",
        "node-fetch": "^3.2.4",
        "puppeteer": "14.1.0",
        "sass": "^1.50.1",
        "standard": "17.0.0",
        "timekeeper": "^2.1.1",
        "webextension-polyfill": "^0.9.0",
        "yargs": "^17.5.1"
    },
    "dependencies": {
        "@duckduckgo/autofill": "github:duckduckgo/duckduckgo-autofill#4.4.0",
        "@duckduckgo/content-scope-scripts": "github:duckduckgo/content-scope-scripts#1.3.0",
        "@duckduckgo/jsbloom": "^1.0.2",
        "@duckduckgo/privacy-grade": "1.1.0",
        "bel": "6.0.0",
        "deep-freeze": "0.0.1",
        "dexie": "3.2.2",
        "eventemitter2": "6.4.5",
        "is-plain-object": "5.0.0",
        "jquery": "3.6.0",
        "node-gyp": "^9.0.0",
        "normalize.scss": "0.1.0",
        "psl": "1.8.0",
        "punycode": "2.1.1",
        "runtimer": "1.0.3",
        "seedrandom": "^3.0.5",
        "tldts": "^5.7.79",
        "tracker-surrogates": "github:duckduckgo/tracker-surrogates#1.0.0",
        "underscore": "1.13.3",
        "web-ext": "^6.8.0"
    },
    "babel": {
        "presets": [
            [
                "@babel/preset-env",
                {
                    "exclude": [
                        "transform-regenerator"
                    ]
                }
            ]
        ]
    }
}
